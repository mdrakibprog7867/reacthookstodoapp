{"version":3,"sources":["images/todo.svg","component/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","useState","inputData","setInputData","list","localStorage","getItem","JSON","parse","getLocalItems","items","setItems","toggle","setToggle","isEditItem","setIsEditItem","addItem","map","elem","id","name","allInputData","Date","getTime","toString","alert","useEffect","setItem","stringify","className","src","todo","alt","type","placeholder","value","onChange","e","target","title","onClick","curElm","newEditItem","find","editItem","index","upDatedItem","filter","itemElm","deleteItem","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+MAAe,MAA0B,iC,eCwI1BA,EApIF,WAET,IAWA,EAAgCC,mBAAS,IAAzC,mBAAKC,EAAL,KAAgBC,EAAhB,KACA,EAAwBF,mBAZF,WAClB,IAAIG,EAAOC,aAAaC,QAAQ,SAChC,OAAIF,EACOG,KAAKC,MAAMJ,GAGX,GAMkBK,IAAjC,mBAAKC,EAAL,KAAYC,EAAZ,KACA,EAA0BV,oBAAS,GAAnC,mBAAKW,EAAL,KAAaC,EAAb,KACA,EAAkCZ,mBAAS,MAA3C,mBAAKa,EAAL,KAAiBC,EAAjB,KAGMC,EAAU,WACZ,GAAKd,EAIA,GAAIA,IAAcU,EACnBD,EAASD,EAAMO,KAAI,SAACC,GAChB,OAAIA,EAAKC,KAAOL,EACL,2BAAKI,GAAZ,IAAkBE,KAAMlB,IAErBgB,MAEXf,EAAa,IACbU,GAAU,GACVE,EAAc,UAGb,CACD,IAAMM,EAAe,CAAEF,IAAI,IAAIG,MAAOC,UAAUC,WAAYJ,KAAMlB,GAClES,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBlB,EAAa,SAlBbsB,MAAM,+BAsCdC,qBAAU,WACNrB,aAAasB,QAAQ,QAASpB,KAAKqB,UAAUlB,MAC9C,CAACA,IAeJ,OACI,mCACI,qBAAKmB,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACA,qBAAKA,UAAU,eAAf,SACI,oBAAIA,UAAU,UAAd,0CAEA,mCACI,qBAAKC,IAAKC,EAAMC,IAAI,aACpB,4EAGJ,sBAAKH,UAAU,WAAf,UACI,uBAAOI,KAAK,OAAOC,YAAY,6BAC3BC,MAAOjC,EACPkC,SAAU,SAACC,GAAD,OAAOlC,EAAakC,EAAEC,OAAOH,UAGvCvB,EAAS,mBAAGiB,UAAU,qBAAqBU,MAAM,WAC7CC,QAASxB,IAAgB,mBAAGa,UAAU,sBAAsBU,MAAM,cAC9DC,QAASxB,OAIzB,qBAAKa,UAAU,YAAf,SAEQnB,EAAMO,KAAI,SAACwB,GACP,OACI,sBAAKZ,UAAU,WAAf,UACI,6BAAKY,EAAOrB,OACZ,sBAAKS,UAAU,WAAf,UACI,mBAAGA,UAAU,sBAAsBU,MAAM,YACrCC,QAAS,kBA5CpC,SAACrB,GACd,IAAIuB,EAAchC,EAAMiC,MAAK,SAACzB,GAC1B,OACIA,EAAKC,KAAOA,KAIpBN,GAAU,GACVV,EAAauC,EAAYtB,MACzBL,EAAcI,GAmCyCyB,CAASH,EAAOtB,OACnC,mBAAGU,UAAU,2BAA2BU,MAAM,cAC1CC,QAAS,kBAlElC,SAACK,GAChB,IAAMC,EAAcpC,EAAMqC,QAAO,SAACC,GAC9B,OACIH,IAAUG,EAAQ7B,MAG1BR,EAASmC,GA4D8CG,CAAWR,EAAOtB,YANdsB,EAAOtB,SAgBtD,qBAAKU,UAAU,YAAf,SACI,wBAAQA,UAAU,eAAe,oBAAkB,aAC/CW,QApEL,WACf7B,EAAS,KAkEO,SAEI,0DCpHbuC,EARH,WACV,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.10c730ac.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/todo.975e4dd4.svg\";","import React, { useState, useEffect } from 'react'\r\nimport todo from '../images/todo.svg'\r\nimport '../App.css'\r\n\r\nconst Todo = () => {\r\n    // to get from local storage \r\n    const getLocalItems = () => {\r\n        let list = localStorage.getItem('lists')\r\n        if (list) {\r\n            return JSON.parse(list)\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    }\r\n\r\n    //CREATING STATES\r\n    let [inputData, setInputData] = useState('')\r\n    let [items, setItems] = useState(getLocalItems())\r\n    let [toggle, setToggle] = useState(true)\r\n    let [isEditItem, setIsEditItem] = useState(null)\r\n\r\n    // For adding items \r\n    const addItem = () => {\r\n        if (!inputData) {\r\n            alert(\"Please fill the data first\")\r\n        }\r\n        //For edit button/updated buton\r\n        else if (inputData && !toggle) {\r\n            setItems(items.map((elem) => {\r\n                if (elem.id === isEditItem) {\r\n                    return { ...elem, name: inputData }\r\n                }\r\n                return elem;\r\n            }))\r\n            setInputData('')\r\n            setToggle(true)\r\n            setIsEditItem(null)\r\n        }\r\n        //For plus button\r\n        else {\r\n            const allInputData = { id: new Date().getTime().toString(), name: inputData }\r\n            setItems([...items, allInputData])\r\n            setInputData('')\r\n        }\r\n    }\r\n\r\n    // For deleting single Item at once\r\n    const deleteItem = (index) => {\r\n        const upDatedItem = items.filter((itemElm) => {\r\n            return (\r\n                index !== itemElm.id\r\n            )\r\n        });\r\n        setItems(upDatedItem)\r\n    }\r\n\r\n    //For clearing all the items at once\r\n    const clearItems = () => {\r\n        setItems([])\r\n    }\r\n\r\n    // Add data to local storage \r\n    useEffect(() => {\r\n        localStorage.setItem('lists', JSON.stringify(items))\r\n    }, [items])\r\n\r\n    //Edit item\r\n    const editItem = (id) => {\r\n        let newEditItem = items.find((elem) => {\r\n            return (\r\n                elem.id === id\r\n            )\r\n        });\r\n        // console.log(newEditItem);\r\n        setToggle(false)\r\n        setInputData(newEditItem.name)\r\n        setIsEditItem(id)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className=\"child-div\">\r\n                <div className=\"main-heading\">\r\n                    <h1 className=\"heading\"> Rakib's TODO üòç</h1>\r\n                </div>\r\n                    <figure>\r\n                        <img src={todo} alt=\"todologo\" />\r\n                        <figcaption>Add Your List Here üëá</figcaption>\r\n                    </figure>\r\n\r\n                    <div className=\"addItems\">\r\n                        <input type=\"text\" placeholder=\" ‚úçÔ∏è Add Items...\"\r\n                            value={inputData}\r\n                            onChange={(e) => setInputData(e.target.value)}\r\n                        />\r\n                        {\r\n                            toggle ? <i className=\"fa fa-plus add-btn\" title=\"Add Item\"\r\n                                onClick={addItem}></i> : <i className=\"far fa-edit add-btn\" title=\"Update Item\"\r\n                                    onClick={addItem}></i>\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"showItems\">\r\n                        {\r\n                            items.map((curElm) => {\r\n                                return (\r\n                                    <div className=\"eachItem\" key={curElm.id}>\r\n                                        <h3>{curElm.name}</h3>\r\n                                        <div className=\"todo-btn\">\r\n                                            <i className=\"far fa-edit add-btn\" title=\"Edit Item\"\r\n                                                onClick={() => editItem(curElm.id)}></i>\r\n                                            <i className=\"far fa-trash-alt add-btn\" title=\"Delete Item\"\r\n                                                onClick={() => deleteItem(curElm.id)}></i>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    {/* Clear all button  */}\r\n                    <div className=\"showItems\">\r\n                        <button className=\"btn effect04\" data-sm-link-text=\"Remove All\"\r\n                            onClick={clearItems}>\r\n                            <span>CHECK LIST</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n\r\n\r\n","import React from 'react'\nimport Todo from './component/Todo'\n\nconst App = () => {\n  return (\n    <div>\n      <Todo></Todo>\n    </div>\n  )\n}\n\nexport default App\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}